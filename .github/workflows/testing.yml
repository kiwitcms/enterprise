name: testing

on:
  pull_request:
    branches:
      - "*"
  push:
    branches: master

permissions: read-all

jobs:
  test_matrix:
    name: ${{ matrix.command }} (${{ matrix.python-version}})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.11]
        command: [flake8, pylint, test-docker-image]

    steps:
    - name: Docker version info
      run: |
        docker --version
        docker --help

        docker-compose --version
        docker-compose --help

    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libkrb5-dev libxml2-dev libxmlsec1-dev libxmlsec1-openssl
        pip install -U pip setuptools wheel
        pip install -r devel.txt

        # used in test scripts
        sudo apt-get install ldap-utils wrk
        if [ -z `which firefox` ]; then
            sudo apt-get install firefox
        fi
        if [ -z `which geckodriver` ]; then
            sudo apt-get install firefox-geckodriver
        fi

    - name: Login to Quay.io
      if: matrix.command == 'test-docker-image'
      run: |
        echo "${{ secrets.QUAY_PUSH_TOKEN }}" | docker login -u="${{ secrets.QUAY_PUSH_USERNAME }}" --password-stdin quay.io

    - name: make ${{ matrix.command }}
      run: |
        make ${{ matrix.command }}

    - name: Logout of Quay.io
      if: ${{ always() && matrix.command == 'test-docker-image' }}
      run: |
        docker logout quay.io

    - name: Upload testing artifacts
      if: always() && matrix.command == 'test-docker-image'
      uses: actions/upload-artifact@v4
      with:
        name: testing-artifacts
        path: |
          ./*.json
          ./*.html
          ./*.log
          ./wrk-logs-*/
          ./*docker.log
