name: testing

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "*"

jobs:
  test_matrix:
    name: ${{ matrix.command }} (${{ matrix.python-version}})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.6]
        command: [flake8, pylint, docker-image]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python dependencies
      run: |
        sudo apt-get install libkrb5-dev
        pip install -r devel.txt

    - name: make ${{ matrix.command }}
      run: |
        make ${{ matrix.command }}


    - name: Sanity test - boot the docker image
      if: matrix.command == 'docker-image'
      run: |
        docker-compose -f docker-compose.testing up -d
        sleep 5

        IP_ADDRESS=`docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' web`
        echo "--- testing.example.bg: $IP_ADDRESS --"
        sudo sh -c "echo '$IP_ADDRESS    testing.example.bg' >> /etc/hosts"

    - name: Sanity test - initial configuration
      if: matrix.command == 'docker-image'
      run: |
        docker exec -i web /Kiwi/manage.py migrate
        docker exec -i web /Kiwi/manage.py createsuperuser --noinput --username super-root --email root@example.com
        docker exec -i web /Kiwi/manage.py create_tenant                \
            --schema_name public --name "TT" --paid_until 2050-12-31    \
            --on_trial False --owner_id 1 --organization "Testing dept" \
            --domain-domain testing.example.bg --domain-is_primary True

    - name: Sanity test - download login page
      if: matrix.command == 'docker-image'
      run: |
        curl -k -L -o page.html https://testing.example.bg:8443/

    - name: Archive page.html
      if: matrix.command == 'docker-image'
      uses: actions/upload-artifact@v1
      with:
        name: page.html
        path: page.html

    - name: Sanity test - check page.html
      if: matrix.command == 'docker-image'
      run: |
        set -x

        # version is Enterprise
        cat page.html | grep "Version.*-Enterprise"

        # plugins are listed
        cat page.html | grep 'href="/kiwitcms_tenants/'
        cat page.html | grep 'href="/kiwitcms_github_app/'

        # template override for social icons
        cat page.html | grep "or Continue With"

        # social backends are listed
        for ICON in static.d/images/social_auth/backends/*.png; do
            BACKEND=`basename $ICON | sed 's/.png//'`

            cat page.html | grep "/login/$BACKEND/"
            cat page.html | grep "<img src='/static/images/social_auth/backends/$BACKEND.*.png'"
        done

        # social icons are present
        for URL in `cat page.html | grep "/static/images/social_auth/backends/" | cut -d= -f2 | cut -d"'" -f2`; do
            echo "Verify image $URL is present"
            curl -k -f -o /dev/null https://testing.example.bg:8443/$URL
        done

    - name: Sanity test - LDAP login and sync
      if: matrix.command == 'docker-image'
      run: |
        LDAP_ADDRESS=`docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' openldap_server`

        # import users from the local config file and query the LDAP server
        sudo apt-get install ldap-utils
        ldapadd -x -h $LDAP_ADDRESS -p 389 -D cn=Manager,dc=example,dc=com -w admin -f testing/ldap.ldif
        ldapsearch -x -LLL -h $LDAP_ADDRESS -p 389 -b dc=example,dc=com objectClass=person

        # Now install RobotFramework so we can drive the browser automatically
        pip install robotframework robotframework-seleniumlibrary
        if [ -z `which firefox` ]; then
            sudo apt-get install firefox
        fi

        if [ -z `which geckodriver` ]; then
            sudo apt-get install firefox-geckodriver
        fi

        robot testing/ldap.robot

        docker exec -i web /Kiwi/manage.py ldap_sync_users
        cat testing/ldap.py | docker exec -i web /Kiwi/manage.py shell

    - name: Sanity test - shut down the docker image
      if: matrix.command == 'docker-image'
      run: |
        docker-compose -f docker-compose.testing down
